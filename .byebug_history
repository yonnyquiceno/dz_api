c
@sc
c
@sc
c
@sc
c
cat1.products
p1
p4
c
p1
c
p2
c
p1
c
p1
c
cat2
cat1
c
cat2
cat1
c
cat2
at2
cat1
c
@threshold
c
@params[:thold]
@threshold
c
@threshold
c
@scores.select { |sc| sc.class == Float }
c
@scores.select { |sc| sc.class == Float }
c
@scores.select { |sc| sc.class == Float }
c
@scores.select { |sc| sc.class == Float }
c
@scores.select { |sc| sc.class == Float }
c
@scores.select { |sc| sc.class == Float }
@scores
c
@cat
c
@cat
c
@scores.map(&:category)
c
@scores.map(&:category)
c
@scores.map(&:category)
c
@scores.map(&:category)
@scores.map(&:class)
@scores
@scores.first(2).last.class
@scores.first.class
c
@scores.
@scores.first.class
@scores
@scores.first.last.class
c
@scores.first.last.class
@scores.first.first.class
@scores.first
@scores.keys
@scores
c
@scores
c
@scores
c
prod
prod.name
query
@scores
c
@scores
c
@scores
c
query
prod.name
c
@scores
c
@prods = Product.by_price_range(@p_r[0], @p_r[1])
c
@scores
c
@score
c
@price_range[1]
@params[:maxprice]
c
@params[:maxprice]
@price_range[1]
@price_range[0]
c
nc
n
nn
n
nn
n
nn
n
@price_range[1]
@price_range[0]
n
@params[:maxprice]
@params[:minprice]
@price_range[0]
@price_range[1]
c
@price_range[1]
@price_range[0]
@price_range
c
@price_range
c
@products.count
c
@category
c
@params[:maxprice] == (nil or "")
@params[:maxprice] == (nil || "")
@params[:maxprice] == nil or ""
@params[:maxprice] == nil || ""
@max_price
@min_price
@params[:maxprice] == ""
@params[:maxprice]
@max_price
@min_price
c
@min_price
@max_price
c
@max_price
c
@max_price
@man_price
@min_price
c
params[:maxprice]
params
c
params
c
@params[:cat].to_i
@params[:cat]
c
@products.map(&:name)
c
@products.map(&:name)
c
@products.map(&:name)
@products.count
c
@products.count
c
@products.count
c
@products.count
@products
c
@products
c
@products
c
@products
c
@products
@query
c
@es
c
@category.name
@category
c
@category
c
@category
c
@category
c
@category
@params[:cat].to_i
n
@params[:cat].to_i
@params[:cat]
@category
@params
c
@params[:q]
@params
params
c
@params
params
c
params
c
params
c
params["q"]
params
params.q
params[q]
params.first
params.firs
params
